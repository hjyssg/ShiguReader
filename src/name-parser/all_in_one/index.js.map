{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./character-names.js","webpack:///./index.js","webpack:///./name-parser-config.js","webpack:///webpack/bootstrap","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["module.exports =[\r\n//kankore  http://dunkel.halfmoon.jp/kancolle/\r\n\"長門\",\r\n\"陸奥\",\r\n\"伊勢\",\r\n\"日向\",\r\n\"雪風\",\r\n\"赤城\",\r\n\"加賀\",\r\n\"蒼龍\",\r\n\"飛龍\",\r\n\"島風\",\r\n\"吹雪\",\r\n\"白雪\",\r\n\"初雪\",\r\n\"深雪\",\r\n\"叢雲\",\r\n\"磯波\",\r\n\"綾波\",\r\n\"敷波\",\r\n\"大井\",\r\n\"北上\",\r\n\"金剛\",\r\n\"比叡\",\r\n\"榛名\",\r\n\"霧島\",\r\n\"鳳翔\",\r\n\"扶桑\",\r\n\"山城\",\r\n\"天龍\",\r\n\"龍田\",\r\n\"龍驤\",\r\n\"睦月\",\r\n\"如月\",\r\n\"皐月\",\r\n\"文月\",\r\n\"長月\",\r\n\"菊月\",\r\n\"三日月\",\r\n\"望月\",\r\n\"球磨\",\r\n\"多摩\",\r\n\"木曾\",\r\n\"長良\",\r\n\"五十鈴\",\r\n\"名取\",\r\n\"由良\",\r\n\"川内\",\r\n\"神通\",\r\n\"那珂\",\r\n\"千歳\",\r\n\"千代田\",\r\n\"最上\",\r\n\"古鷹\",\r\n\"加古\",\r\n\"青葉\",\r\n\"妙高\",\r\n\"那智\",\r\n\"足柄\",\r\n\"羽黒\",\r\n\"高雄\",\r\n\"愛宕\",\r\n\"摩耶\",\r\n\"鳥海\",\r\n\"利根\",\r\n\"筑摩\",\r\n\"飛鷹\",\r\n\"隼鷹\",\r\n\"朧\",\r\n\"曙\",\r\n\"漣\",\r\n\"潮\",\r\n\"暁\",\r\n\"響\",\r\n\"雷\",\r\n\"電\",\r\n\"初春\",\r\n\"子日\",\r\n\"若葉\",\r\n\"初霜\",\r\n\"白露\",\r\n\"時雨\",\r\n\"村雨\",\r\n\"夕立\",\r\n\"五月雨\",\r\n\"涼風\",\r\n\"朝潮\",\r\n\"大潮\",\r\n\"満潮\",\r\n\"荒潮\",\r\n\"霰\",\r\n\"霞\",\r\n\"陽炎\",\r\n\"不知火\",\r\n\"黒潮\",\r\n\"祥鳳\",\r\n\"千歳甲\",\r\n\"千代田甲\",\r\n\"千歳航\",\r\n\"千代田航\",\r\n\"翔鶴\",\r\n\"瑞鶴\",\r\n\"鬼怒\",\r\n\"阿武隈\",\r\n\"夕張\",\r\n\"瑞鳳\",\r\n\"三隈\",\r\n\"初風\",\r\n\"舞風\",\r\n\"衣笠\",\r\n\"伊19\",\r\n\"鈴谷\",\r\n\"熊野\",\r\n\"伊168\",\r\n\"伊58\",\r\n\"伊8\",\r\n\"大和\",\r\n\"秋雲\",\r\n\"夕雲\",\r\n\"巻雲\",\r\n\"長波\",\r\n\"阿賀野\",\r\n\"能代\",\r\n\"矢矧\",\r\n\"酒匂\",\r\n\"武蔵\",\r\n\"Верный\",\r\n\"大鳳\",\r\n\"香取\",\r\n\"伊401\",\r\n\"あきつ丸\",\r\n\"神威\",\r\n\"まるゆ\",\r\n\"弥生\",\r\n\"卯月\",\r\n\"磯風\",\r\n\"浦風\",\r\n\"谷風\",\r\n\"浜風\",\r\n\"Bismarck\",\r\n\"Bismarck zwei\",\r\n\"Z1\",\r\n\"Z3\",\r\n\"Prinz Eugen\",\r\n\"Bismarck drei\",\r\n\"Z1 zwei\",\r\n\"Z3 zwei\",\r\n\"天津風\",\r\n\"明石\",\r\n\"大淀\",\r\n\"大鯨\",\r\n\"龍鳳\",\r\n\"時津風\",\r\n\"雲龍\",\r\n\"天城\",\r\n\"葛城\",\r\n\"春雨\",\r\n\"早霜\",\r\n\"清霜\",\r\n\"朝雲\",\r\n\"山雲\",\r\n\"野分\",\r\n\"秋月\",\r\n\"照月\",\r\n\"初月\",\r\n\"高波\",\r\n\"朝霜\",\r\n\"U-511\",\r\n\"Graf Zeppelin\",\r\n\"Saratoga\",\r\n\"呂500\",\r\n\"Warspite\",\r\n\"Iowa\",\r\n\"Littorio\",\r\n\"Roma\",\r\n\"Libeccio\",\r\n\"Aquila\",\r\n\"秋津洲\",\r\n\"Italia\",\r\n\"Zara\",\r\n\"Pola\",\r\n\"瑞穂\",\r\n\"沖波\",\r\n\"風雲\",\r\n\"嵐\",\r\n\"萩風\",\r\n\"親潮\",\r\n\"山風\",\r\n\"海風\",\r\n\"江風\",\r\n\"速吸\",\r\n\"鹿島\",\r\n\"神風\",\r\n\"朝風\",\r\n\"春風\",\r\n\"松風\",\r\n\"旗風\",\r\n\"天霧\",\r\n\"狭霧\",\r\n\"水無月\",\r\n\"伊26\",\r\n\"浜波\",\r\n\"藤波\",\r\n\"浦波\",\r\n\"Commandant Teste\",\r\n\"Richelieu\",\r\n\"伊400\",\r\n\"伊13\",\r\n\"伊14\",\r\n\"Zara due\",\r\n\"Гангут\",\r\n\"Ташкент\",\r\n\"Ark Royal\",\r\n\"Гангут два\",\r\n\"占守\",\r\n\"国後\",\r\n\"Jervis\",\r\n\"春日丸\",\r\n\"神鷹\",\r\n\"Luigi Torelli\",\r\n\"大鷹\",\r\n\"岸波\",\r\n\"UIT-25\",\r\n\"伊504\",\r\n\"涼月\",\r\n\"択捉\",\r\n\"松輪\",\r\n\"佐渡\",\r\n\"対馬\",\r\n\"日振\",\r\n\"大東\",\r\n\"福江\",\r\n\"Nelson\",\r\n\"Gotland\",\r\n\"Maestrale\",\r\n\r\n\"穂乃果\",\r\n\"ことり\",\r\n\r\n\"エルフ\"\r\n].filter(e => e.length > 1);\r\n","const config = require(\"./name-parser-config\");\r\nconst same_tag_regs_table = config.same_tag_regs_table;\r\nconst not_author_but_tag = config.not_author_but_tag;\r\nconst char_names = require(\"./character-names\");\r\n//https://stackoverflow.com/questions/5582574/how-to-check-if-a-string-contains-text-from-an-array-of-substrings-in-javascript\r\nconst char_name_regex = new RegExp(char_names.join(\"|\"));\r\nconst not_author_but_tag_regex = new RegExp(not_author_but_tag.join(\"$|\") + \"$\", \"i\");\r\n\r\nconst useless_tag_regex = /DL版|同人誌|別スキャン|修正版|^エロ|^digital$|^JPG|^PNG|ページ補足|進行中|別版|Various/i;\r\nfunction isUselessTag(str) {\r\n    return !!str.match(useless_tag_regex)\r\n}\r\n\r\nconst media_types = [\r\n    \"同人音声\",\r\n    \"同人催眠音声\",\r\n    \"同人ソフト\",\r\n    \"同人CG集\",\r\n    \"同人CG\",\r\n    \"同人ゲーム\",\r\n    \"同人GAME\",\r\n    \"成年コミック\",\r\n    \"一般コミック\",\r\n    \"一般漫画\",\r\n    \"ゲームCG\",\r\n    \"イラスト集\",\r\n    \"アンソロジー\",\r\n    \"画集\",\r\n    \"雑誌\",\r\n    \"18禁ゲーム\",\r\n    \"GAME\",\r\n    \"CG\",\r\n    \"同人誌\",\r\n    \"DOUJINSHI\"\r\n];\r\nconst media_type_regex = new RegExp(media_types.map(e => `(${e})`).join(\"|\"), \"i\");\r\n\r\nfunction isMediaType(str) {\r\n    return !!str.match(media_type_regex);\r\n}\r\n\r\nfunction getMediaType(str) {\r\n    let res = str.match(media_type_regex) || [];\r\n    return res[0];\r\n}\r\n\r\nconst same_tag_matrix = [];\r\nfor (let tag in same_tag_regs_table) {\r\n    if (same_tag_regs_table.hasOwnProperty(tag)) {\r\n        const big_pre_join = same_tag_regs_table[tag].map(e => e.source)\r\n        const r = new RegExp(big_pre_join.join(\"|\"), 'i')\r\n        const row = [r, tag];\r\n        same_tag_matrix.push(row);\r\n    }\r\n}\r\nsame_tag_matrix.sort((r1, r2) => {\r\n    return r2[1].length - r1[1].length\r\n});\r\n\r\nconst localCache = {};\r\n\r\nconst comicket_reg = /^C\\d{2}$/i;\r\nconst comicket_reg_2 = /^C1\\d{2}$/i;\r\nconst air_comicket_reg = /^エアコミケ\\d{1}$/i;\r\nconst comic_star_reg = /^COMIC1☆\\d{1,2}$/i;\r\nconst love_live_event_reg = /^僕らのラブライブ!/i;\r\nconst comitea_reg = /^コミティア.*\\d/;\r\nconst sankuri_reg = /^サンクリ.*\\d+/;\r\nconst reitaisai_reg = /^例大祭.*\\d+/;\r\nconst tora_reg = /^とら祭り.*\\d+/;\r\nconst komitore_reg = /^こみトレ.*\\d+/;\r\nconst reg_list = [comicket_reg, air_comicket_reg, comicket_reg_2, comic_star_reg, love_live_event_reg,\r\n    comitea_reg, sankuri_reg, reitaisai_reg,\r\n    tora_reg, komitore_reg, /みみけっと.*\\d+/,\r\n    /コミトレ.*\\d+/, /FF\\d+/, /iDOL SURVIVAL.*\\d/i,\r\n    /SC\\d+/, /コミコミ.*\\d/, /ふたけっと.*\\d/,\r\n    /ファータグランデ騎空祭/, /歌姫庭園/, /紅楼夢/,\r\n    /CSP\\d/, /CC大阪\\d/, /COMITIA\\d/];\r\n\r\nconst event_reg = new RegExp(reg_list.map(e => e.source).join(\"|\"), \"i\");\r\n\r\nfunction belongToEvent(str) {\r\n    return !!str.match(event_reg);\r\n}\r\n\r\nconst comiket_to_date_table = {};\r\nfunction getDateFromParse(str) {\r\n    const pp = parse(str);\r\n    let result;\r\n    if (pp) {\r\n        if (pp.dateTag) {\r\n            result = getDateFromStr(pp.dateTag);\r\n        } else if (pp.comiket) {\r\n            result = getDateFromComiket(pp.comiket)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n//for sort algo, not very accurate\r\nfunction getDateFromComiket(comiket) {\r\n    let result = null;\r\n    let num;\r\n    let year;\r\n    let month;\r\n\r\n    if (comiket_to_date_table[comiket]) {\r\n        result = comiket_to_date_table[comiket];\r\n    } else if (comiket.match(comicket_reg)) {\r\n        comiket = comiket.replace(\"C\", \"\");\r\n        num = parseInt(comiket);\r\n        year = Math.floor(num / 2) + 1971;\r\n        const isSummer = num % 2 === 0;\r\n        month = isSummer ? 8 : 11;\r\n        const day = isSummer ? 10 : 28;\r\n        result = new Date(year, month, day);\r\n    } else if (comiket.match(air_comicket_reg)) {\r\n        comiket = comiket.replace(\"エアコミケ\", \"\");\r\n        num = parseInt(comiket);\r\n        if (num === 1) {\r\n            result = new Date(2020, 7, 30);\r\n        } else {\r\n            result = new Date(2020, 11, 30);\r\n        }\r\n    } else if (comiket.match(comicket_reg_2)) {\r\n        comiket = comiket.replace(\"C\", \"\");\r\n        num = parseInt(comiket);\r\n        result = new Date(2022, 8, 13);\r\n    } else if (comiket.match(comic_star_reg)) {\r\n        comiket = comiket.replace(\"COMIC1☆\", \"\");\r\n        num = parseInt(comiket);\r\n        if (num <= 10) {\r\n            //once per year\r\n            result = new Date(2006 + num, 3, 30);\r\n        } else {\r\n            num = (num - 10)\r\n            year = 2017 + Math.floor(num / 2);\r\n            month = num % 2 === 0 ? 10 : 4;\r\n            result = new Date(year, month, 30);\r\n        }\r\n    }\r\n\r\n    if (result) {\r\n        comiket_to_date_table[comiket] = result;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getDateFromStr(str) {\r\n    const mresult = str.match(date_reg);\r\n    if (mresult) {\r\n        let [wholeMatch, y, m, d] = mresult.filter(e => !!e);\r\n        y = convertYearString(y);\r\n        m = parseInt(m) - 1;\r\n        d = parseInt(d) || 1;\r\n\r\n        if (m < 0 || m > 11) {\r\n            return undefined;\r\n        } else if (d < 1 || d > 31) {\r\n            return undefined;\r\n        }\r\n\r\n        return new Date(y, m, d);\r\n    }\r\n}\r\n\r\nfunction convertYearString(y) {\r\n    if (y.length === 2) {\r\n        y = parseInt(y);\r\n        if (y > 70) {\r\n            y = 1900 + y;\r\n        } else {\r\n            y = 2000 + y;\r\n        }\r\n    } else {\r\n        y = parseInt(y)\r\n    }\r\n\r\n    return y;\r\n}\r\n\r\n\r\nfunction isDateValid(date) {\r\n    // An invalid date object returns NaN for getTime() and NaN is the only\r\n    // object not strictly equal to itself.\r\n    return date.getTime() === date.getTime();\r\n};\r\n\r\nconst dreg0 = /(\\d{4})(\\d{1,2})(\\d{2})/;\r\nconst dreg1 = /(\\d{2})(\\d{2})(\\d{2})/;\r\nconst dreg2 = /(\\d{2})-(\\d{2})-(\\d{2})/;\r\nconst dreg3 = /(\\d{4})-(\\d{1,2})-(\\d{2})/;\r\nconst dreg4 = /(\\d{4})年(\\d{1,2})月号/;\r\nconst dreg5 = /(\\d{4})年(\\d{1,2})月(\\d{1,2})日/;\r\nconst dreg6 = /(\\d{4})\\.(\\d{1,2})\\.(\\d{1,2})/;\r\nconst date_reg = new RegExp([dreg0, dreg1, dreg2, dreg3, dreg4, dreg5, dreg6].map(e => e.source).join(\"|\"), \"i\");\r\nfunction isStrDate(str) {\r\n    if (str.match(date_reg)) {\r\n        const dd = getDateFromStr(str);\r\n        return !!(dd && isDateValid(dd));\r\n    }\r\n}\r\n\r\nconst groupAndNameReg = /^(.*?)\\s*\\((.*?)\\)$/;\r\nfunction getGroupAndName(str) {\r\n    var macthes = str.match(groupAndNameReg);\r\n    if (macthes && macthes.length > 0) {\r\n        return {\r\n            group: macthes[1].trim(),\r\n            name: macthes[2].trim(),\r\n        };\r\n    } else {\r\n        return {\r\n            name: str.trim(),\r\n        };\r\n    }\r\n}\r\n\r\nfunction match(reg, str) {\r\n    const result = [];\r\n    var token = reg.exec(str);\r\n    while (token) {\r\n        result.push(token[1]);\r\n        token = reg.exec(str);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction isNotAuthor(str) {\r\n    return str.match(not_author_but_tag_regex);\r\n}\r\n\r\nfunction findMaxStr(arr) {\r\n    let res = arr[0];\r\n    arr.forEach(e => {\r\n        if (e.length > res.length) {\r\n            res = e;\r\n        }\r\n    })\r\n    return res;\r\n}\r\n\r\nconst pReg = /\\((.*?)\\)/g;\r\nconst bReg = /\\[(.*?)\\]/g;\r\nconst seperator = /,|、|&|＆/;\r\n\r\nfunction getLocalCache(){\r\n    return localCache;\r\n}\r\n\r\nfunction setLocalCache(newLocache){\r\n    for (var key in newLocache) {\r\n        if (!newLocache.hasOwnProperty(key)) {\r\n            continue;\r\n        }\r\n        var obj = newLocache[key];\r\n        localCache[key] = obj;\r\n    }\r\n}\r\n\r\nfunction parse(str) {\r\n    if (!str || localCache[str] === \"NO_EXIST\") {\r\n        return null;\r\n    }\r\n\r\n    if (localCache[str]) {\r\n        return localCache[str];\r\n    }\r\n\r\n    const bMacthes = match(bReg, str); //[]\r\n    const pMacthes = match(pReg, str);  //()\r\n\r\n    const hasB = (bMacthes && bMacthes.length > 0);\r\n    const hasP = (pMacthes && pMacthes.length > 0);\r\n\r\n    if (!hasB && !hasP) {\r\n        localCache[str] = \"NO_EXIST\";\r\n        return;\r\n    }\r\n\r\n    let author;\r\n    let authors = [];\r\n    let group;\r\n    let dateTag;\r\n    let comiket;\r\n    let type;\r\n    let tags = [];\r\n\r\n    function isOtherInfo(token) {\r\n        let result = false;\r\n        if (isMediaType(token)) {\r\n            type = getMediaType(token);\r\n            result = true;\r\n        } else if (belongToEvent(token)) {\r\n            comiket = token;\r\n            result = true;\r\n        } else if (isStrDate(token)) {\r\n            dateTag = token;  //e.g 190214\r\n            result = true;\r\n        } else if (isUselessTag(token)) {\r\n            //nothing\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // looking for author, avoid 6 year digit\r\n    if (bMacthes && bMacthes.length > 0) {\r\n        for (let ii = 0; ii < bMacthes.length; ii++) {\r\n            let token = bMacthes[ii].trim();\r\n            const tt = token.toLowerCase();\r\n            const nextCharIndex = str.indexOf(bMacthes[ii]) + bMacthes[ii].length + 1;\r\n            const nextChar = str[nextCharIndex];\r\n\r\n            if (isOtherInfo(token)) {\r\n                continue;\r\n            } if (isNotAuthor(tt)) {\r\n                //e.g pixiv is not author\r\n                tags.push(token);\r\n            } else if (nextChar === \".\" || nextCharIndex >= str.length) {\r\n                //e.g KI-RecenT SP02 NATURALCORDE [DL版].zip\r\n                // [DL版] is not auhor name\r\n                tags.push(token);\r\n            } else if (!author) {\r\n                //  [真珠貝(武田弘光)]\r\n                const temp = getGroupAndName(token);\r\n                if (temp.name && !isNotAuthor(temp.name)) {\r\n                    //e.g よろず is not author\r\n                    author = temp.name;\r\n                    authors = author.split(seperator).map(e => e.trim());\r\n                }\r\n                group = temp.group;\r\n            } else {\r\n                tags.push(token);\r\n            }\r\n        }\r\n    }\r\n\r\n    //---------------handle tags\r\n    if (pMacthes && pMacthes.length > 0) {\r\n        tags.push(...pMacthes);\r\n    }\r\n\r\n    //seperate\r\n    const tseperator = /,|、/;\r\n    const tempTags = [];\r\n    tags.forEach(t => {\r\n        tempTags.push(...(t.split(tseperator)));\r\n    })\r\n    tags = tempTags;\r\n\r\n\r\n    tags = tags.map(e => e.trim());\r\n\r\n    tags = tags.filter(e => {\r\n        return e.length > 1 && !isOtherInfo(e) && authors.indexOf(e) === -1 && e !== author;\r\n    });\r\n\r\n    tags = tags.filter(e => {\r\n        return  !isUselessTag(e) && !isMediaType(e);\r\n    })\r\n\r\n    const rawTags = tags.slice();\r\n\r\n    tags = tags.map(e => {\r\n        e = e.replace(/ {2,}/g, \" \").replace(/。/g, \"\").replace(/！/g, \"!\").replace(/？/g, \"?\");\r\n\r\n        //tag reducing\r\n        const converts = [];\r\n        for (let ii = 0; ii < same_tag_matrix.length; ii++) {\r\n            const row = same_tag_matrix[ii];\r\n            const r = row[0];\r\n            if (e.match(r)) {\r\n                converts.push(row[1]);\r\n            }\r\n        }\r\n\r\n        if (converts.length > 0) {\r\n            return findMaxStr(converts);\r\n        } else {\r\n            return e;\r\n        }\r\n    })\r\n\r\n    if (!type) {\r\n        if (comiket || group) {\r\n            type = \"同人誌\";\r\n        } else {\r\n            type = \"UNKOWN\";\r\n        }\r\n    }\r\n\r\n    if (!author && !group && tags.length === 0) {\r\n        localCache[str] = \"NO_EXIST\";\r\n        return;\r\n    }\r\n\r\n    //get title\r\n    let title = str;\r\n    (bMacthes || []).concat(pMacthes || [], tags || [], [/\\[/g, /\\]/g, /\\(/g, /\\)/g]).forEach(e => {\r\n        title = title.replace(e, \"\");\r\n    })\r\n    if(title.includes(\".\")){\r\n        title = title.split(\".\")[0];\r\n    }\r\n    title = title.trim();\r\n\r\n    //get character names\r\n    let charNames = [];\r\n    if(char_name_regex ){\r\n        const names = title.match(char_name_regex);\r\n        if(names){\r\n            charNames.push(...names);\r\n        }\r\n    } \r\n\r\n    const extraTags = getExtraTags(title);\r\n    const result = {\r\n        // 日期tag：比如 20220312\r\n        dateTag, \r\n        // 同人的group\r\n        group, \r\n        // 作者。其实有点不对，因为有的是有多作者的\r\n        author, \r\n        // 作者list\r\n        authors, \r\n        // tags 已过变形处理\r\n        tags, \r\n        // 用regex从string找到的角色名字\r\n        charNames,\r\n        // extrac tags\r\n        extraTags,\r\n        // 未经转换的tags\r\n        rawTags,\r\n        // 比如 c101\r\n        comiket, \r\n        // 类型\r\n        type, \r\n        // 标题\r\n        title\r\n    };\r\n\r\n    localCache[str] = result;\r\n    return result;\r\n}\r\n\r\nfunction getExtraTags(str) {\r\n    // [161109] TVアニメ「ラブライブ！サンシャイン!!」挿入歌シングル3「想いよひとつになれ／MIRAI TICKET」／Aqours [320K].zip\r\n    //[180727]TVアニメ『音楽少女』OPテーマ「永遠少年」／小倉唯[320K].rar\r\n    let jpbReg = /「(.*?)」/g;\r\n    const macthes = match(jpbReg, str) || [];\r\n\r\n    let jpbReg2 = /『(.*?)』/g;\r\n    const macthes2 = match(jpbReg2, str) || [];\r\n\r\n    return (macthes.concat(macthes2)).map(e => {\r\n        return e.trim();\r\n    })\r\n}\r\n\r\n// https://stackoverflow.com/questions/11919065/sort-an-array-by-the-levenshtein-distance-with-best-performance-in-javascript\r\nfunction editDistance(s, t) {\r\n    if (s === t) {\r\n        return 0;\r\n    }\r\n    var n = s.length, m = t.length;\r\n    if (n === 0 || m === 0) {\r\n        return n + m;\r\n    }\r\n    var x = 0, y, a, b, c, d, g, h, k;\r\n    var p = new Array(n);\r\n    for (y = 0; y < n;) {\r\n        p[y] = ++y;\r\n    }\r\n\r\n    for (; (x + 3) < m; x += 4) {\r\n        var e1 = t.charCodeAt(x);\r\n        var e2 = t.charCodeAt(x + 1);\r\n        var e3 = t.charCodeAt(x + 2);\r\n        var e4 = t.charCodeAt(x + 3);\r\n        c = x;\r\n        b = x + 1;\r\n        d = x + 2;\r\n        g = x + 3;\r\n        h = x + 4;\r\n        for (y = 0; y < n; y++) {\r\n            k = s.charCodeAt(y);\r\n            a = p[y];\r\n            if (a < c || b < c) {\r\n                c = (a > b ? b + 1 : a + 1);\r\n            }\r\n            else {\r\n                if (e1 !== k) {\r\n                    c++;\r\n                }\r\n            }\r\n\r\n            if (c < b || d < b) {\r\n                b = (c > d ? d + 1 : c + 1);\r\n            }\r\n            else {\r\n                if (e2 !== k) {\r\n                    b++;\r\n                }\r\n            }\r\n\r\n            if (b < d || g < d) {\r\n                d = (b > g ? g + 1 : b + 1);\r\n            }\r\n            else {\r\n                if (e3 !== k) {\r\n                    d++;\r\n                }\r\n            }\r\n\r\n            if (d < g || h < g) {\r\n                g = (d > h ? h + 1 : d + 1);\r\n            }\r\n            else {\r\n                if (e4 !== k) {\r\n                    g++;\r\n                }\r\n            }\r\n            p[y] = h = g;\r\n            g = d;\r\n            d = b;\r\n            b = c;\r\n            c = a;\r\n        }\r\n    }\r\n\r\n    for (; x < m;) {\r\n        var e = t.charCodeAt(x);\r\n        c = x;\r\n        d = ++x;\r\n        for (y = 0; y < n; y++) {\r\n            a = p[y];\r\n            if (a < c || d < c) {\r\n                d = (a > d ? d + 1 : a + 1);\r\n            }\r\n            else {\r\n                if (e !== s.charCodeAt(y)) {\r\n                    d = c + 1;\r\n                }\r\n                else {\r\n                    d = c;\r\n                }\r\n            }\r\n            p[y] = d;\r\n            c = a;\r\n        }\r\n        h = d;\r\n    }\r\n\r\n    return h;\r\n}\r\n\r\n//---------------------\r\n\r\nfunction compareInternalDigit(s1, s2) {\r\n    const digitTokens1 = s1.match(/\\d+/g);\r\n    const digitTokens2 = s2.match(/\\d+/g);\r\n    if (digitTokens1 && digitTokens2) {\r\n        if (digitTokens1.length !== digitTokens2.length ||\r\n            digitTokens1.join() !== digitTokens2.join()) {\r\n            return false;\r\n        }\r\n    } else if (digitTokens1 && !digitTokens2) {\r\n        return false;\r\n    } else if (!digitTokens1 && digitTokens2) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction isHighlySimilar(s1, s2) {\r\n    if (!s1 && !s2) {\r\n        return true;\r\n    } else if (s1 && s2) {\r\n        if (!compareInternalDigit(s1, s2)) {\r\n            return false;\r\n        }\r\n\r\n        const distance = editDistance(s1, s2);\r\n        const avgLen = (s1.length + s2.length) / 2;\r\n        const ratio = distance / (Math.ceil(avgLen));\r\n\r\n        return ratio <= 0.2;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    isUselessTag,\r\n    isMediaType,\r\n    getMediaType,\r\n    belongToEvent,\r\n    convertYearString,\r\n    editDistance,\r\n    getDateFromStr,\r\n\r\n    parse,\r\n    getDateFromComiket,\r\n    getDateFromParse,\r\n    getLocalCache,\r\n    setLocalCache,\r\n    isHighlySimilar,\r\n}\r\n\r\n\r\n\r\n","module.exports.same_tag_regs_table = {\r\n    \"東方Project\": [/^東方$/, /Touhou\\s*Project/, /東方project/],\r\n    \"オリジナル\": [/^Original$/],\r\n    \"Kanon\": [/カノン|Kanon/],\r\n    \"艦これ\": [/艦これ|舰これ/, /艦隊これくしょん/, /Kantai\\s*Collection/, /KanColle/],\r\n    \"ラブライブ!\": [/Love Live/, /ラブライブ/],\r\n    \"ラブライブ!サンシャイン!!\": [/ラブライブ.*サンシャイン.*/],\r\n    \"プリンセスコネクト!Re:Dive\": [/プリンセスコネクト.*Re.*Dive/],\r\n    \"Fate／Grand Order\": [/Fate.*Grand.*Order/, /FGO/],\r\n    \"Fate／Stay Night\": [/Fate.*Stay.*Night/],\r\n    \"Fate／Zero\": [/Fate.*Zero/],\r\n    \"Fate／kaleid liner プリズマ☆イリヤ\": [/Fate.*kaleid.*liner.*プリズマ.*イリヤ/, /Fate.*kaleid.*liner/, /プリズマ.*イリヤ/],\r\n    \"Fate\": [/^Fate\\s*／*\\w+/],\r\n    \"アイドルマスター\": [/アイドルマスタ/, /DOL.*M@STER/, /dol.*master/, /アイマス/],\r\n    \"アイドルマスター シンデレラガールズ\": [/アイドルマスター.*シンデレラガールズ/, /DOLM@STER.*CINDERELLA.*GIRLS/],\r\n    \"アイドルマスター ミリオンライブ\": [/アイドルマスター.*ミリオン/, /ミリオンライブ/],\r\n    \"アイドルマスター シャイニーカラーズ\": [/アイドルマスター.*シャイニーカラーズ/],\r\n    \"アズールレーン\": [/Azur Lane/],\r\n    \"ガールズ&パンツァー\": [/Girls.*nd.*Panzer/],\r\n    \"けいおん\": [/けいおん/, /K-ON/],\r\n    \"プリキュア\": [/プリキュア/],\r\n    \"To LOVEる\": [/To.*LOVEる/, /To.*LOVE.*ru/],\r\n    \"魔法少女まどか☆マギカ\": [/まどか.*マギカ|PuellaMagiMadoka/],\r\n    \"アイカツ!\": [/アイカツ.*/],\r\n    \"エヴァンゲリオン\": [/エヴァンゲリオン/, /^エヴァ$/, /Evangelion/],\r\n    \"Angel Beats\": [/Angel.*Beats.*/, /エンジェル.*ビーツ/],\r\n    \"Dead Or Alive\": [/Dead Or Alive/, /デッド.*オア.*アライヴ/, /DEADorALIVE/],\r\n    \"IS ＜インフィニット・ストラトス＞\": [/S.*インフィニット.*ストラトス.*/, /インフィニット.*ストラトス/],\r\n    \"D.C～ダ・カーポ\": [/D\\.C\\./, /ダ.*カーポ/],\r\n    \"Dog Days\": [/Dog.*Days.*/],\r\n    \"Dream C Club\": [/Dream.*C.*Club/],\r\n    \"ガンダム \": [/ガンダム|gundam/],\r\n    \"コードギアス\": [/コードギアス/],\r\n    \"ご注文はうさぎですか\": [/ご注文はうさぎですか/],\r\n    \"ソードアート・オンライン\": [/ソードアート.*オンライン/, /Sword\\s*Art\\s*Online/],\r\n    \"ダンガンロンパ\": [/ダンガンロンパ/],\r\n    \"ドラゴンクエスト\": [/ドラゴンクエスト/, /Dragon\\s*Quest/],\r\n    \"ファイナルファンタジー\": [/ファイナルファンタジー|FinalFantasy/],\r\n    \"咲 -Saki-\": [/咲.*Saki.*/],\r\n    \"咲-Saki- 阿知賀編\": [/咲.*Saki.*阿知賀編/],\r\n    \"聖剣伝説\": [/聖剣伝説/],\r\n    \"閃乱カグラ\": [/閃乱カグラ/],\r\n    \"魔法少女リリカルなのは\": [/魔法少女リリカルなのは.*|Nanoha$|^なのは$/],\r\n    \"キング・オブ・ファイター\": [/キング\\.オブ\\.ファイター/, /^KOF$/],\r\n    \"ファイアーエムブレム\": [/ファイアーエムブレム/],\r\n    \"ファンタシースター\": [/ファンタシースター|PhantasyStar/],\r\n    \"To Heart 2\": [/To.*Heart.*2|トゥハート2/]\r\n}\r\n\r\nmodule.exports.not_author_but_tag = [\r\n    \"同人音声\",\r\n    \"同人誌\",\r\n    \"アンソロジー\",\r\n    \"DL版\",\r\n    \"よろず\",\r\n    \"成年コミック\",\r\n    \"Pixiv\",\r\n    \"アーティスト\",\r\n    \"雑誌\",\r\n    \"English\",\r\n    \"Chinese\",\r\n    \"320K\"\r\n]\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./index.js\");\n",""],"names":["module","exports","filter","e","length","config","require","same_tag_regs_table","not_author_but_tag","char_names","char_name_regex","RegExp","join","not_author_but_tag_regex","useless_tag_regex","isUselessTag","str","match","media_types","media_type_regex","map","concat","isMediaType","getMediaType","res","same_tag_matrix","tag","hasOwnProperty","big_pre_join","source","r","row","push","sort","r1","r2","localCache","comicket_reg","comicket_reg_2","air_comicket_reg","comic_star_reg","love_live_event_reg","comitea_reg","sankuri_reg","reitaisai_reg","tora_reg","komitore_reg","reg_list","event_reg","belongToEvent","comiket_to_date_table","getDateFromParse","pp","parse","result","dateTag","getDateFromStr","comiket","getDateFromComiket","num","year","month","replace","parseInt","Math","floor","isSummer","day","Date","mresult","date_reg","_mresult$filter","_mresult$filter2","_slicedToArray","wholeMatch","y","m","d","convertYearString","undefined","isDateValid","date","getTime","dreg0","dreg1","dreg2","dreg3","dreg4","dreg5","dreg6","isStrDate","dd","groupAndNameReg","getGroupAndName","macthes","group","trim","name","reg","token","exec","isNotAuthor","findMaxStr","arr","forEach","pReg","bReg","seperator","getLocalCache","setLocalCache","newLocache","key","obj","bMacthes","pMacthes","hasB","hasP","author","authors","type","tags","isOtherInfo","ii","tt","toLowerCase","nextCharIndex","indexOf","nextChar","temp","split","_tags","apply","_toConsumableArray","tseperator","tempTags","t","rawTags","slice","converts","title","includes","charNames","names","extraTags","getExtraTags","jpbReg","jpbReg2","macthes2","editDistance","s","n","x","a","b","c","g","h","k","p","Array","e1","charCodeAt","e2","e3","e4","compareInternalDigit","s1","s2","digitTokens1","digitTokens2","isHighlySimilar","distance","avgLen","ratio","ceil"],"sourceRoot":""}